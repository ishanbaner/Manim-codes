from manim import *
class Intro(Scene):
    def construct(self):
        set=Tex("$\{2,7,1,8\}$")
        card=Tex("$|\{2,7,1,8\}|=4$")
        c=Tex("Cardinality",color=GREEN).shift(DOWN*1)
        box=Rectangle(width=1,height=1,color=RED).shift(RIGHT*1.5)
        c1=Tex("Cardinal number",color=RED).shift(RIGHT*2+UP*1)
        self.play(Write(set))
        self.wait(3)
        self.play(Transform(set,card))
        self.wait()
        self.play(Write(c))
        self.wait(2)
        self.play(Write(box))
        self.play(Transform(box,c1))
        self.wait(20)

class natural(Scene):
    def construct(self):
        nat=Tex("$\{1,2,3,4,\ldots \}$")
        natcar=Tex("$|\{1,2,3,4,\ldots \}|=\mathfrak{a}$")
        reals=Tex("$\mathbb{R}$")
        reals1=Tex("$|\mathbb{R}|=\mathfrak{c}$")
        eq=Tex("$=$")
        gre=Tex("$<$")
        pow=Tex("$2^\mathfrak{a}$").shift(DOWN*1)
        self.play(Write(nat))
        self.wait(8)
        self.play(Transform(nat,natcar))
        self.wait(1)
        self.play(nat.animate.shift(UP*1))
        self.wait(1)
        self.play(Write(reals))
        self.wait()
        self.play(Transform(reals,reals1))
        self.wait(7)
        self.play(reals.animate.shift(DOWN*1))
        self.play(Write(eq))
        self.wait(1)
        self.play(Transform(eq,gre))
        self.wait(5)
        self.play(Transform(reals,pow))
        self.wait(20)
        
class bij(Scene):
    def construct(self):
        count=Tex("$\{a_1,a_2,a_3,\ldots\}$").shift(UP*1)
        nat=Tex("$\{1,2,3,\ldots\}$").shift(DOWN*1)
        arrow1=Arrow(start=UP*1+LEFT*1,end=DOWN*1+LEFT*0.85,max_tip_length_to_length_ratio=0.15,color=YELLOW)
        arrow2=Arrow(start=UP*1+LEFT*0.325,end=DOWN*1+LEFT*0.35,max_tip_length_to_length_ratio=0.15,color=YELLOW)
        arrow3=Arrow(start=UP*1+RIGHT*0.35,end=DOWN*1+RIGHT*0.15,max_tip_length_to_length_ratio=0.15,color=YELLOW)
        aleph0=Tex(r"$\aleph_0$")
        c=Tex(r"$\mathfrak{c}=2^{\aleph_0}$")
        self.play(Write(count))
        self.play(Write(nat))
        self.wait(3)
        self.play(Write(arrow1))
        self.play(Write(arrow2))
        self.play(Write(arrow3))
        self.wait(5)
        self.play(FadeOut(count,nat,arrow1,arrow2,arrow3))
        self.play(Write(aleph0))
        self.wait(13)
        self.play(Transform(aleph0,c))
        self.wait(20)

class aleph(Scene):
    def construct(self):
        aleph1=Tex(r"$\aleph_1$",color=RED)
        ineq=Tex(r"$\aleph_0<\aleph_1$")
        state=Tex(r"$\nexists \mathfrak{q}$ such that $\aleph_0<\mathfrak{q}<\aleph_1$")
        self.play(Write(aleph1))
        self.wait(4)
        self.play(Transform(aleph1,ineq))
        self.wait(1)
        self.play(aleph1.animate.shift(UP*1))
        self.wait(3)
        self.play(Write(state))
        self.wait(20)

class contin(Scene):
    def construct(self):
        cont=Tex("Continuum Hypothesis",color=BLUE)
        s=Tex("$S$")
        s1=Tex("$|S|$")
        l=Tex(r"$\aleph_0<$").shift(LEFT*1)
        r=Tex(r"$<2^{\aleph_0}$").shift(RIGHT*1+UP*0.06)
        aleph=Tex(r"$\aleph_1=2^{\aleph_0}$")
        stat=Tex("such $S$ can't exist",color=RED).shift(DOWN*1)
        c1=Tex("$S_1$").shift(LEFT*0.5)
        c2=Tex("$S_2$").shift(RIGHT*0.5)
        stat2=Tex("$|S_2|\leq |S_1|\leq 2^{|S_2|}$")
        state1=Tex("$|S_2|=|S_1|$")
        state2=Tex("$|S_1|=2^{|S_2|}$")
        self.play(Write(cont))
        self.wait(2)
        self.play(FadeOut(cont))
        self.play(Write(s))
        self.wait()
        self.play(Transform(s,s1))
        self.wait(3)
        self.play(Write(l),Write(r))
        self.play(Write(stat))
        self.wait(2)
        self.play(FadeOut(l,r,s,stat))
        self.play(Write(aleph))
        self.wait(8)
        self.play(FadeOut(aleph))
        self.wait()
        self.play(Write(c1),Write(c2))
        self.wait(1)
        self.play(Transform(c1,stat2),Transform(c2,stat2))
        self.wait(2)
        self.play(Transform(c1,state1),Transform(c2,state1))
        self.wait(2)
        self.play(Transform(c1,state2),Transform(c2,state2))
        self.wait(20)

class indep(Scene):
    def construct(self):
        state1=Tex("CH can't be disproven from ZF").shift(UP*1)
        state2=Tex("CH can't be proven from ZF")
        state3=Tex("CH is independent from ZF")
        self.play(Write(state1))
        self.wait(3)
        self.play(Write(state2))
        self.wait(6)
        self.play(Transform(state1,state3),Transform(state2,state3))
        self.wait(20)

class argu(Scene):
    def construct(self):
        foa=Tex("For or Against",color=RED)
        godel=Tex("G$\ddot{o}$del: Didn't believe CH")
        cohen=Tex("Cohen: Tended to reject CH").shift(DOWN*1)
        para=Tex("Skolem's Paradox",color=GREEN).shift(UP*1)
        state=Tex("$u\in B$")
        uncount=Tex("(Uncountable)",color=BLUE).shift(LEFT*2.3)
        count=Tex("(Countable)",color=RED).shift(RIGHT*2)
        n=Tex("New axioms?").shift(DOWN*1)
        w=Tex("W. Hugh Woodin")
        star=Tex("Star-axioms")
        imp=Tex(r"$\aleph_2=2^{\aleph_0}$",color=BLUE)
        qu=Tex("?").shift(RIGHT*1.1)
        t=Tex("A supporting proof for star axioms!").shift(DOWN*1)
        j=Tex("Joel David Hamkins").shift(UP*1)
        state1=Tex("CH can't have a Truth value")
        self.play(Write(godel))
        self.wait(15)
        self.play(Write(cohen))
        self.wait(10)
        self.play(FadeOut(godel,cohen))
        self.play(Write(para))
        self.wait(4)
        self.play(Write(state))
        self.wait()
        self.play(Write(uncount))
        self.play(Write(count))
        self.wait(5)
        self.play(Write(n))
        self.wait(7)
        self.play(FadeOut(para,state,count,uncount,n))
        self.play(Write(w))
        self.wait(2)
        self.play(w.animate.shift(UP*1))
        self.wait()
        self.play(Write(star))
        self.wait(2)
        self.play(Transform(star,imp))
        self.wait(5)
        self.play(Write(qu))
        self.wait(5)
        self.play(Write(t))
        self.wait()
        self.play(FadeOut(w,star,qu,t))
        self.wait()
        self.play(Write(j))
        self.wait(5)
        self.play(Write(state1))
        self.wait(20)

class cf(Scene):
    def construct(self):
        cof=Tex("Cofinal subsets of a set").shift(UP*2)
        state1=Tex("$B\subset A$").shift(UP*1)
        state2=Tex(r"$\forall a\in A, \exists b\in B$ such that $a\leq b$")
        state3=Tex("$cf(A)=min\{|B|$ where $B$ is a cofinal subset of $A\}$").shift(DOWN*1)
        self.play(Write(cof))
        self.wait(2)
        self.play(Write(state1))
        self.wait(2)
        self.play(Write(state2))
        self.wait(4)
        self.play(Write(state3))
        self.wait(20)

class cons(Scene):
    def construct(self):
        one=Tex(r"$\aleph_{\alpha}^{\aleph_{\beta}}=\aleph_{\beta+1}$ where $\alpha\leq\beta+1$",color=RED).shift(UP*1)
        two=Tex(r"$\aleph_{\alpha}^{\aleph_{\beta}}=\aleph_{\alpha}$ where $\beta+1\leq\alpha$ and $\aleph_{\beta}<cf(\aleph_{\alpha)}$",color=BLUE)
        three=Tex(r"$\aleph_{\alpha}^{\aleph_{\beta}}=\aleph_{\alpha+1}$ where $\beta+1\leq\alpha+1$ and $\aleph_{\beta}\geq cf(\aleph_{\alpha})$",color=GREEN).shift(DOWN*1)
        self.play(Write(one),Write(two),Write(three))
        self.wait(10)

class conc(Scene):
    def construct(self):
        zf=Tex(r"ZF $\nRightarrow$ solvability of CH").shift(UP*1)
        con=Tex("ZF must be consistent",color=BLUE)
        self.play(Write(zf))
        self.wait(5)
        self.play(Write(con))
        self.wait(10)

class i(Scene):
    def construct(self):
        e=Tex("$e^{i\pi}$")
        self.play(Write(e))
        self.wait(5)
