from manim import *
class Intro(Scene):
    def construct(self):
        kc=Tex("$k$ colorable?").shift(DOWN*2)
        d11=Dot(point=LEFT,radius=0.1,color=RED).shift(LEFT*1.7)
        d21=Dot(point=LEFT+UP,radius=0.1,color=GREEN).shift(LEFT*1.7)
        d31=Dot(point=RIGHT,radius=0.1,color=YELLOW).shift(LEFT*1.7)
        d41=Dot(point=RIGHT+UP,radius=0.1,color=RED).shift(LEFT*1.7)
        d1=Dot(point=LEFT,radius=0.1)
        d2=Dot(point=LEFT+UP,radius=0.1)
        d3=Dot(point=RIGHT,radius=0.1)
        d4=Dot(point=RIGHT+UP,radius=0.1)
        l1=Line(start=LEFT,end=LEFT+UP)
        l2=Line(start=LEFT,end=RIGHT)
        l3=Line(start=LEFT+UP,end=RIGHT)
        l4=Line(start=RIGHT,end=RIGHT+UP)
        dl1=DashedLine(start=RIGHT,end=RIGHT*2+DOWN*1)
        dl2=DashedLine(start=LEFT,end=LEFT*2+DOWN*1)
        dl3=DashedLine(start=RIGHT+UP,end=RIGHT*2+UP*2)
        dl4=DashedLine(start=LEFT+UP,end=LEFT*2+UP*2)
        graph=VGroup(l1,l2,l3,l4,dl1,dl2,dl3,dl4,d1,d2,d3,d4)
        p11=Dot(point=LEFT,radius=0.1,color=RED).shift(RIGHT*1.7)
        p21=Dot(point=LEFT+UP,radius=0.1,color=GREEN).shift(RIGHT*1.7)
        p31=Dot(point=RIGHT,radius=0.1,color=YELLOW).shift(RIGHT*1.7)
        p41=Dot(point=RIGHT+UP,radius=0.1,color=RED).shift(RIGHT*1.7)
        p1=Dot(point=LEFT,radius=0.1)
        p2=Dot(point=LEFT+UP,radius=0.1)
        p3=Dot(point=RIGHT,radius=0.1)
        p4=Dot(point=RIGHT+UP,radius=0.1)
        lp1=Line(start=LEFT,end=LEFT+UP)
        lp2=Line(start=LEFT,end=RIGHT)
        lp3=Line(start=LEFT+UP,end=RIGHT)
        lp4=Line(start=RIGHT,end=RIGHT+UP)
        sgraph=VGroup(lp1,lp2,lp4,p1,p2,p3,p4)
        self.play(Write(graph))
        self.wait(1)
        self.play(Write(kc))
        self.wait()
        self.play(FadeOut(kc))
        self.wait(5)
        self.play(FadeIn(sgraph),graph.animate.shift(LEFT*1.7),sgraph.animate.shift(RIGHT*1.7))
        self.wait()
        self.play(FadeIn(p11,p21,p31,p41))
        self.wait()
        self.play(FadeIn(d11,d21,d31,d41))
        self.wait(10)

class Tychonoff(Scene):
    def construct(self):
        comp=Tex("Compact",color=GREEN).shift(DOWN*1)
        pr=Tex(r"$\prod\limits_{\alpha}^{\infty} X_{\alpha}$",color=GREEN)
        sp=Tex(r"$X_{\alpha}$",color=GREEN)
        self.play(Write(sp))
        self.wait()
        self.play(Write(comp))
        self.wait()
        self.play(Transform(sp,pr),FadeOut(comp))
        self.wait()
        self.play(Write(comp))
        self.wait(10)
    
class kclass(Scene):
    def construct(self):
        k=Tex("$\{1,2,\ldots k\}$")
        k1=Tex("$\{1,2,\ldots k\}$")
        obj1 = MathTex(r"\{","1",",","2",",","\ldots","k","\}")
        obj1.set_color_by_tex("1", GREEN)
        obj1.set_color_by_tex("2", RED)
        obj1.set_color_by_tex("k", YELLOW)
        self.play(Write(k))
        self.wait(4)
        self.play(Transform(k,obj1))
        self.wait()
        self.play(Transform(k,k1))
        self.wait(3)

class product(Scene):
    def construct(self):
        s=Square().scale(1.5).shift(UP*0.5+RIGHT*0.5)
        s1=Square().shift(UP*0.7+RIGHT*0.9)
        br=Brace(s,sharpness=2)
        br1=Brace(s1,sharpness=2)
        comp=Tex("Compact",color=GREEN).next_to(br,DOWN)
        poi=MathTex("(","x_1",",","x_2",",","x_3","\ldots",")").shift(RIGHT*0.5)
        poi.set_color_by_tex("x_1",RED)
        poi.set_color_by_tex("x_2",GREEN)
        poi.set_color_by_tex("x_3",YELLOW)
        pro=Tex(r"$X=\prod\limits_{V}\{1,2,\ldots k\}$")
        def label_updater(obj):
            obj.next_to(br,DOWN)
        comp.add_updater(label_updater)
        self.play(Write(pro))
        self.wait(2)
        self.play(FadeIn(poi),poi.animate.shift(UP*1))
        self.wait(2)
        self.play(FadeOut(poi))
        self.wait()
        self.play(Write(br))
        self.play(Write(comp))
        self.play(Transform(br,br1))
        self.wait(5)

class basic(Scene):
    def construct(self):
        f=MathTex("F_{U,h}=",r"\{f\vert",r"f \text{ restricted to }U=h","\}")
        f.set_color_by_tex(r"f \text{ restricted to }U=h",color=BLUE)
        au=MathTex("A_U=",r"\bigcup\{F_{U,h}\vert",r"\text{ h is a valid coloring }","\}")
        au.set_color_by_tex(r"\text{ h is a valid coloring }",color=BLUE)
        auc=MathTex("A_U^c=",r"\bigcup\{F_{U,h}\vert",r"\text{ h is not a valid coloring }","\}")
        auc.set_color_by_tex(r"\text{ h is not a valid coloring }",color=BLUE)
        self.play(Write(f))
        self.wait(9)
        self.play(FadeOut(f))
        self.wait()
        self.play(Write(au))
        self.wait(10)
        self.play(Transform(au,auc))
        self.wait(10)

class intersect(Scene):
    def construct(self):
        inter=Tex("Intersections of basic open sets?")
        dot11=Dot(point=LEFT*3,color=RED)
        dot12=Dot(point=LEFT*2.5+UP*0.5,color=GREEN)
        dot13=Dot(point=LEFT*2,color=GREEN)
        dot21=Dot(point=LEFT*1,color=GREEN)
        dot22=Dot(point=LEFT*0.5+UP*0.5,color=GREEN)
        dot23=Dot(color=RED)
        dot31=Dot(point=RIGHT*2,color=RED)
        dot32=Dot(point=RIGHT*2.5+UP*0.5,color=GREEN)
        dot33=Dot(point=RIGHT*3,color=GREEN)
        l11=Line(start=LEFT*3,end=LEFT*2.5+UP*0.5)
        l12=Line(start=LEFT*3,end=LEFT*2)
        l21=Line(start=LEFT*0,end=LEFT*0.5+UP*0.5)
        l22=Line(start=LEFT*1,end=LEFT*0)
        l31=Line(start=RIGHT*2,end=RIGHT*2.5+UP*0.5)
        l32=Line(start=RIGHT*2,end=RIGHT*3)
        g1=VGroup(l11,l12,dot11,dot12,dot13).shift(RIGHT*0.5)
        g2=VGroup(l21,l22,dot21,dot22,dot23).shift(RIGHT*0.5)
        g3=VGroup(l31,l32,dot31,dot32,dot33)
        d41=Dot(point=LEFT*1.5,color=RED)
        d42=Dot(point=LEFT*1+UP*0.5,color=GREEN)
        d43=Dot(point=LEFT*1+DOWN*0.5,color=GREEN)
        d44=Dot(point=LEFT*0.5,color=RED)
        d45=Dot(point=RIGHT*0.5+UP*0.5,color=GREEN)
        d46=Dot(point=RIGHT*0.5+DOWN*0.5,color=GREEN)
        d47=Dot(point=RIGHT*1,color=RED)
        d48=Dot(point=RIGHT*1.5+UP*0.5,color=GREEN)
        d49=Dot(point=RIGHT*1.5+DOWN*0.5,color=GREEN)
        l41=Line(start=LEFT*1.5,end=LEFT*1+UP*0.5)
        l42=Line(start=LEFT*1.5,end=LEFT*1+DOWN*0.5)
        l43=Line(start=LEFT*1+UP*0.5,end=LEFT*0.5)
        l44=Line(start=LEFT*1+DOWN*0.5,end=LEFT*0.5)
        l45=Line(start=LEFT*0.5,end=RIGHT*0.5+UP*0.5)
        l46=Line(start=LEFT*0.5,end=RIGHT*0.5+DOWN*0.5)
        l47=Line(start=RIGHT*0.5+UP*0.5,end=RIGHT*1)
        l48=Line(start=RIGHT*0.5+DOWN*0.5,end=RIGHT*1)
        l49=Line(start=RIGHT*1,end=RIGHT*1.5+UP*0.5)
        l50=Line(start=RIGHT*1,end=RIGHT*1.5+DOWN*0.5)
        g4=VGroup(l41,l42,l43,l44,l45,l46,l47,l48,l49,l50,d41,d42,d43,d44,d45,d46,d47,d48,d49)
        exp=MathTex("A_{U_1}\cap A_{U_2}\cap\ldots A_{U_n}=","A_{U_1\cup U_2\cup\ldots A_{U_n}}")
        exp.set_color_by_tex("A_{U_1\cap U_2\cap\ldots A_{U_n}}",color=BLUE)
        self.play(Write(inter))
        self.wait(7)
        self.play(FadeOut(inter))
        self.wait()
        self.play(Write(g1))
        self.play(Write(g2))
        self.play(Write(g3))
        self.wait(4)
        self.play(Transform(g1,g4),Transform(g2,g4),Transform(g3,g4))
        self.wait(5)
        self.play(FadeOut(g1,g2,g3))
        self.wait()
        self.play(Write(exp))
        self.wait(10)

class finall(Scene):
    def construct(self):
        x=Tex("$X=\prod\limits_{V}\{1,2,\ldots k\}$",color=GREEN).shift(UP*1)
        fam=Tex(r"$\bigcap A_U\neq \phi$",color=BLUE)
        cap=Tex(r"$\bigcap\limits_{U\subseteq V} A_U\neq \phi$")
        self.play(Write(x))
        self.wait(3)
        self.play(Write(fam))
        self.wait(3)
        self.play(Transform(x,cap),Transform(fam,cap))
        self.wait(5)
