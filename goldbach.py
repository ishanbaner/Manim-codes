from manim import *
class draw(Scene):
    def construct(self):
        l1 = NumberLine(x_range=[-10-1,0,1],length=6,rotation=45*DEGREES,).shift(LEFT*2)
        l2 = NumberLine(x_range=[0,10+1,1],length=6,rotation=-45*DEGREES,color=RED).shift(RIGHT*2)
        nl1 = Line(start=LEFT*1+UP*1, end=DOWN*10+RIGHT*10).shift(DOWN*0.05)
        nl2 = Line(start=LEFT*2+UP*0.25, end=DOWN*12+RIGHT*10.25).shift(DOWN*0.05+RIGHT*0.2)
        nl3 = Line(start=LEFT*2.8+DOWN*0.25, end=DOWN*13+RIGHT*10.5).shift(DOWN*0.3+RIGHT*0.2)
        nl4 = Line(start=RIGHT*1+UP*1, end=DOWN*10+LEFT*10,color=RED).shift(DOWN*0.05)
        nl5 = Line(start=RIGHT*2+UP*0.25, end=DOWN*12+LEFT*10.25,color=RED).shift(DOWN*0.05+LEFT*0.2)
        nl6 = Line(start=RIGHT*2.8+DOWN*0.25, end=DOWN*13+LEFT*10.5,color=RED).shift(DOWN*0.3+LEFT*0.2)
        tl = Tex("3").shift(LEFT*1.3+UP*1)
        fl = Tex("5").shift(LEFT*2.1+UP*0.25)
        sl = Tex("7").shift(LEFT*2.7+DOWN*0.3)
        tr = Tex("3",color=RED).shift(RIGHT*1.3+UP*1)
        fr = Tex("5",color=RED).shift(RIGHT*2.1+UP*0.25)
        sr = Tex("7",color=RED).shift(RIGHT*2.7+DOWN*0.3)
        six = Tex("6",color=PINK).shift(DOWN*0.5)
        eight1=Tex("8",color=PINK).shift(DOWN*1.2+LEFT*0.8)
        eight2=Tex("8",color=PINK).shift(DOWN*1.2+RIGHT*0.8)
        ten1=Tex("10",color=PINK).shift(DOWN*1.9+LEFT*1.6)
        ten2=Tex("10",color=PINK).shift(DOWN*1.9+RIGHT*1.6)
        ten3=Tex("10",color=PINK).shift(DOWN*1.9)
        tw1 = Tex("12",color=PINK).shift(DOWN*2.6+LEFT*0.8)
        tw2 = Tex("12",color=PINK).shift(DOWN*2.6+RIGHT*0.8)
        fort = Tex("14",color=PINK).shift(DOWN*3.3)
        self.play(Write(l1))
        self.play(Write(l2))
        self.play(Write(tl))
        self.play(Write(fl))
        self.play(Write(sl))
        self.play(Write(tr))
        self.play(Write(fr))
        self.play(Write(sr))
        self.play(Write(nl1))
        self.play(Write(nl2))
        self.play(Write(nl3))
        self.play(Write(nl4))
        self.play(Write(nl5))
        self.play(Write(nl6))
        self.play(Write(six))
        self.play(Write(eight1))
        self.play(Write(eight2))
        self.play(Write(ten1))
        self.play(Write(ten2))
        self.play(Write(ten3))
        self.play(Write(tw1))
        self.play(Write(tw2))
        self.play(Write(fort))
        self.wait()

class Hist1(Scene):
    def construct(self):
        Hist = Tex("A bit of History",color=RED)
        Letter1 = Tex("\"Every integer that can be written as a sum of 2 primes",color=BLUE).shift(UP*1)
        Letter2 = Tex("can also be written as the sum",color=BLUE)
        Letter3 = Tex("of as many primes as one wishes,until all terms are 1\"",color=BLUE).shift(DOWN*1)
        Letter4 = Tex("\"Every integer greater than 2 can be written",color=BLUE).shift(UP*1)
        Letter5 = Tex("as the sum of 3 primes\"",color=BLUE)
        Letter6 = Tex("\"Every positive even integer can be written as a sum of 2 primes\"",color=BLUE).scale(0.6).shift(UP*1)
        Letter7 = Tex("\"...I regard as a completely certain theorem, although I can't prove it.\"",color=RED).scale(0.5)
        Euler = Tex("~Leonhard Euler",color=RED).scale(0.5).shift(DOWN*1)
        Weak = Tex("Every odd integer greater than 7 can be written as sum of 3 odd primes",color=GREEN).scale(0.6)
        w1 = Tex("Weak",color=GREEN).scale(0.6).shift(DOWN*1)
        self.play(Write(Hist))
        self.wait(6)
        self.play(Hist.animate.shift(UP*2))
        self.play(Write(Letter1))
        self.play(Write(Letter2))
        self.play(Write(Letter3))
        self.wait(10)
        self.play(FadeOut(Hist,Letter1,Letter2,Letter3))
        self.play(Write(Letter4))
        self.play(Write(Letter5))
        self.wait(13)
        self.play(FadeOut(Letter4,Letter5))
        self.play(Write(Letter6))
        self.wait(12)
        self.play(Write(Letter7))
        self.play(Write(Euler))
        self.wait(10)
        self.play(FadeOut(Letter7,Euler))
        self.play(Write(Weak))
        self.wait()
        self.play(Write(w1))
        self.wait(10)

class primenumber(Scene):
    def construct(self):
        pnt = Tex("Prime Number theorem",color=BLUE)
        m = Tex("$m$")
        pm = Tex(r"$P(m)=\frac{1}{\ln m}$",color=RED)
        p = Tex(r"$3\leq m \leq \frac{n}{2}$")
        pan = Tex(r"$P(m,n-m) = \frac{1}{(\ln m)(\ln(n-m))}$",color=RED)
        total = Tex(r"$\sum\limits_{m=3}^\frac{n}{2} \frac{1}{\ln m}  \frac{1}{\ln (n-m)}$").shift(DOWN*1)
        rough = Tex(r"$\approx \frac{n}{2(\ln n)^2}$").shift(DOWN*2)

        self.play(Write(pnt))
        self.wait()
        self.play(pnt.animate.shift(UP*2))
        self.wait()
        self.play(Write(m))
        self.wait()
        self.play(Transform(m,pm))
        self.wait()
        self.play(FadeOut(pnt,m))
        self.wait()
        self.play(Write(p))
        self.wait(14)
        self.play(Transform(p,pan))
        self.wait()
        self.play(Write(total))
        self.wait()
        self.play(Write(rough))
        self.wait(20)

class hardylittlewood(Scene):
    def construct(self):
        mo = Tex(r"$m \to Odd$").shift(UP*1)
        no = Tex(r"$n-m \to Odd$")
        me = Tex(r"$m \to Even$").shift(DOWN*1)
        ne = Tex(r"$n-m \to Even$").shift(DOWN*2)
        c = Tex("$c\geq 2$").shift(UP*3)
        n = Tex("$n=p_1+p_2+\ldots p_c$").shift(UP*2)
        est = Tex(r"$\left(\prod\limits_{p} \frac{p\gamma_{c,p}(n)}{(p-1)^c}\right)\displaystyle{\int\limits_{2\leq x_1 \ldots x_c|x_1+\ldots x_c=n}}\frac{dx_1dx_2\ldots dx_{c-1}}{\ln x_1 \ldots \ln x_c}$")
        g = Tex("$n=(q_1+q_2+\ldots q_c) mod p$",color=RED).shift(DOWN*2)
        circ = Circle(radius=0.5,color=RED).shift(LEFT*3.7+UP*0.5)

        self.play(Write(mo))
        self.wait()
        self.play(Write(no))
        self.wait()
        self.play(Write(me))
        self.wait()
        self.play(Write(ne))
        self.wait(8)
        self.play(FadeOut(mo,no,me,ne))
        self.play(Write(c))
        self.wait(5)
        self.play(Write(n))
        self.wait(5)
        self.play(Write(est))
        self.wait(4)
        self.play(Write(circ))
        self.wait()
        self.play(Transform(circ,g))
        self.wait(21)

class remarks(Scene):
    def construct(self):
        remark = Tex("Remarks on Goldbach's Theorem",color=BLUE)
        conj = Tex("Conjecture A",color=RED).shift(UP*1)
        st = Tex("Every large even number is the sum of 2 odd primes",color=BLUE)
        n2 = Tex(r"$2C_2\frac{n}{(\log n)^2}\prod\limits_{p}\left(\frac{p-1}{p-2}\right)$").shift(DOWN*1)
        c2 = Tex(r"$C_2=\prod\limits_{\omega=3}^{\infty}\left(1-\frac{1}{(\omega-1)^2}\right)$").shift(DOWN*2)

        self.play(Write(remark))
        self.wait()
        self.play(FadeOut(remark))
        self.wait()
        self.play(Write(conj))
        self.wait()
        self.play(Write(st))
        self.wait()
        self.play(Write(n2))
        self.wait()
        self.play(Write(c2))
        self.wait(20)

class rigor(Scene):
    def construct(self):
        m = Tex("Nikolai Chudakov,Johannes Vander Corput,Theodar Estermann").scale(0.5)
        pr = Tex("$n=p_1+p_2+\ldots p_c$")
        c = Tex("$c<800000$",color=RED).shift(DOWN*1)
        s = Tex("For every $n\geq 4$")
        six = Tex("$n=p_1+p_2+\ldots p_6$",color=BLUE).shift(DOWN*1)
        four = Tex("$n=p_1+p_2+p_3+p_4$",color=RED).shift(DOWN*2)

        self.play(Write(m))
        self.wait(8)
        self.play(FadeOut(m))
        self.wait(6)
        self.play(Write(pr))
        self.wait(4)
        self.play(Write(c))
        self.wait(3)
        self.play(FadeOut(pr,c))
        self.wait(5)
        self.play(Write(s))
        self.wait(3)
        self.play(Write(six))
        self.wait(4)
        self.play(Write(four))
        self.wait(6)
class Openning(Scene):
    def construct(self):
        flt=Tex("Fermat's Last theorem").shift(UP*2+LEFT*2)
        twin=Tex("Twin Prime Conjecture").shift(LEFT*3)
        land=Tex("Landau's problems").shift(RIGHT*3)
        collatz=Tex("Collatz conjecture").shift(DOWN*2)
        state=Tex("$2n=p_1+p_2$")
        gold=Tex("Goldbach's conjecture",color=RED).shift(DOWN*1)

        self.play(Write(flt))
        self.play(Write(twin))
        self.play(Write(land))
        self.play(Write(collatz))
        self.wait(8)
        self.play(FadeOut(flt,collatz,twin,land))
        self.play(Write(state))
        self.wait(9)
        self.play(Write(gold))
        self.wait(5)

class verify(Scene):
    def construct(self):
        four = Tex(r"$4\times10^{18}$")
        num = Tex("$3,325,581,707,333,960,528$")

        self.play(Write(four))
        self.wait(6)
        self.play(FadeOut(four))
        self.play(Write(num))
        self.wait(14)
        self.play(FadeOut(num))
        self.wait()